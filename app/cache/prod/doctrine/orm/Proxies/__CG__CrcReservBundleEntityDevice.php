<?php

namespace Proxies\__CG__\Crc\ReservBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Device extends \Crc\ReservBundle\Entity\Device implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'code', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'type', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'model', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'slug', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'description', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'status', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'working', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'missing', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'on_the_ground', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'comment', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'creator', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'department', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'reservations');
        }

        return array('__isInitialized__', 'id', 'code', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'type', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'model', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'slug', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'description', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'status', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'working', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'missing', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'on_the_ground', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'comment', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'creator', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'department', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Device' . "\0" . 'reservations');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Device $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', array($code));

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', array());

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorking($working)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorking', array($working));

        return parent::setWorking($working);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorking()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorking', array());

        return parent::getWorking();
    }

    /**
     * {@inheritDoc}
     */
    public function setComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComment', array($comment));

        return parent::setComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComment', array());

        return parent::getComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setInUse($inUse)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInUse', array($inUse));

        return parent::setInUse($inUse);
    }

    /**
     * {@inheritDoc}
     */
    public function getInUse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInUse', array());

        return parent::getInUse();
    }

    /**
     * {@inheritDoc}
     */
    public function setMissing($missing)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMissing', array($missing));

        return parent::setMissing($missing);
    }

    /**
     * {@inheritDoc}
     */
    public function getMissing()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMissing', array());

        return parent::getMissing();
    }

    /**
     * {@inheritDoc}
     */
    public function setOnTheGround($onTheGround)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOnTheGround', array($onTheGround));

        return parent::setOnTheGround($onTheGround);
    }

    /**
     * {@inheritDoc}
     */
    public function getOnTheGround()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOnTheGround', array());

        return parent::getOnTheGround();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', array($slug));

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', array());

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setModel($model)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModel', array($model));

        return parent::setModel($model);
    }

    /**
     * {@inheritDoc}
     */
    public function getModel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModel', array());

        return parent::getModel();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreator(\Zogs\UserBundle\Entity\User $creator = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreator', array($creator));

        return parent::setCreator($creator);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreator', array());

        return parent::getCreator();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepartment(\Crc\ReservBundle\Entity\Department $department = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepartment', array($department));

        return parent::setDepartment($department);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepartment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepartment', array());

        return parent::getDepartment();
    }

    /**
     * {@inheritDoc}
     */
    public function addReservation(\Crc\ReservBundle\Entity\Reservation $reservations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReservation', array($reservations));

        return parent::addReservation($reservations);
    }

    /**
     * {@inheritDoc}
     */
    public function removeReservation(\Crc\ReservBundle\Entity\Reservation $reservations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeReservation', array($reservations));

        return parent::removeReservation($reservations);
    }

    /**
     * {@inheritDoc}
     */
    public function getReservations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReservations', array());

        return parent::getReservations();
    }

}
