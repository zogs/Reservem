<?php

namespace Proxies\__CG__\Crc\ReservBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Reservation extends \Crc\ReservBundle\Entity\Reservation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'ongoing', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'confirmed', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'active', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'name', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'user', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'department', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'date_begin', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'date_end', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'status', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'comment', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'devices');
        }

        return array('__isInitialized__', 'id', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'ongoing', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'confirmed', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'active', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'name', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'user', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'department', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'date_begin', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'date_end', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'status', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'comment', '' . "\0" . 'Crc\\ReservBundle\\Entity\\Reservation' . "\0" . 'devices');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Reservation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateBegin($dateBegin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateBegin', array($dateBegin));

        return parent::setDateBegin($dateBegin);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateBegin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateBegin', array());

        return parent::getDateBegin();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEnd($dateEnd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEnd', array($dateEnd));

        return parent::setDateEnd($dateEnd);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEnd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEnd', array());

        return parent::getDateEnd();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComment', array($comment));

        return parent::setComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComment', array());

        return parent::getComment();
    }

    /**
     * {@inheritDoc}
     */
    public function addDevice(\Crc\ReservBundle\Entity\Device $devices)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDevice', array($devices));

        return parent::addDevice($devices);
    }

    /**
     * {@inheritDoc}
     */
    public function hasDeviceType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasDeviceType', array($type));

        return parent::hasDeviceType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getDevicesByType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDevicesByType', array($type));

        return parent::getDevicesByType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllTypes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllTypes', array());

        return parent::getAllTypes();
    }

    /**
     * {@inheritDoc}
     */
    public function countDevicesType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'countDevicesType', array($type));

        return parent::countDevicesType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDevice(\Crc\ReservBundle\Entity\Device $devices)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDevice', array($devices));

        return parent::removeDevice($devices);
    }

    /**
     * {@inheritDoc}
     */
    public function getDevices()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDevices', array());

        return parent::getDevices();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidated($validated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidated', array($validated));

        return parent::setValidated($validated);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidated', array());

        return parent::getValidated();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmed($confirmed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmed', array($confirmed));

        return parent::setConfirmed($confirmed);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmed', array());

        return parent::getConfirmed();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepartment(\Crc\ReservBundle\Entity\Department $department = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepartment', array($department));

        return parent::setDepartment($department);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepartment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepartment', array());

        return parent::getDepartment();
    }

    /**
     * {@inheritDoc}
     */
    public function setOngoing($ongoing)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOngoing', array($ongoing));

        return parent::setOngoing($ongoing);
    }

    /**
     * {@inheritDoc}
     */
    public function getOngoing()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOngoing', array());

        return parent::getOngoing();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', array($active));

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', array());

        return parent::getActive();
    }

}
