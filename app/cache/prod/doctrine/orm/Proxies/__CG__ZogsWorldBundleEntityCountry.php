<?php

namespace Proxies\__CG__\Zogs\WorldBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Country extends \Zogs\WorldBundle\Entity\Country implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'id', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'code', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'lang', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'name', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'region', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'iso_2', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'iso_3', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'iso_4', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'iso_numeric', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'internet_domain', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'phone_code', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'included_in_country', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'description', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'level');
        }

        return array('__isInitialized__', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'id', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'code', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'lang', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'name', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'region', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'iso_2', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'iso_3', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'iso_4', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'iso_numeric', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'internet_domain', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'phone_code', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'included_in_country', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'description', '' . "\0" . 'Zogs\\WorldBundle\\Entity\\Country' . "\0" . 'level');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Country $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getLevel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLevel', array());

        return parent::getLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function exist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'exist', array());

        return parent::exist();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', array($code));

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', array());

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCC1($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCC1', array($code));

        return parent::setCC1($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getCC1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCC1', array());

        return parent::getCC1();
    }

    /**
     * {@inheritDoc}
     */
    public function setLang($lang)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLang', array($lang));

        return parent::setLang($lang);
    }

    /**
     * {@inheritDoc}
     */
    public function getLang()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLang', array());

        return parent::getLang();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegion($region)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegion', array($region));

        return parent::setRegion($region);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegion', array());

        return parent::getRegion();
    }

    /**
     * {@inheritDoc}
     */
    public function setIso2($iso2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIso2', array($iso2));

        return parent::setIso2($iso2);
    }

    /**
     * {@inheritDoc}
     */
    public function getIso2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIso2', array());

        return parent::getIso2();
    }

    /**
     * {@inheritDoc}
     */
    public function setIso3($iso3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIso3', array($iso3));

        return parent::setIso3($iso3);
    }

    /**
     * {@inheritDoc}
     */
    public function getIso3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIso3', array());

        return parent::getIso3();
    }

    /**
     * {@inheritDoc}
     */
    public function setIso4($iso4)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIso4', array($iso4));

        return parent::setIso4($iso4);
    }

    /**
     * {@inheritDoc}
     */
    public function getIso4()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIso4', array());

        return parent::getIso4();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsoNumeric($isoNumeric)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsoNumeric', array($isoNumeric));

        return parent::setIsoNumeric($isoNumeric);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsoNumeric()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsoNumeric', array());

        return parent::getIsoNumeric();
    }

    /**
     * {@inheritDoc}
     */
    public function setInternetDomain($internetDomain)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInternetDomain', array($internetDomain));

        return parent::setInternetDomain($internetDomain);
    }

    /**
     * {@inheritDoc}
     */
    public function getInternetDomain()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInternetDomain', array());

        return parent::getInternetDomain();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhoneCode($phoneCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhoneCode', array($phoneCode));

        return parent::setPhoneCode($phoneCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoneCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoneCode', array());

        return parent::getPhoneCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setIncludedInCountry($includedInCountry)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIncludedInCountry', array($includedInCountry));

        return parent::setIncludedInCountry($includedInCountry);
    }

    /**
     * {@inheritDoc}
     */
    public function getIncludedInCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIncludedInCountry', array());

        return parent::getIncludedInCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

}
