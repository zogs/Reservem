<?php

namespace Crc\ReservBundle\Repository;

use Doctrine\ORM\EntityRepository;

use Crc\ReservBundle\Entity\Department;
/**
 * ReservRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DeviceRepository extends EntityRepository
{
	public function findByTypes()
	{
		$types = $this->createQueryBuilder('d')
			->select(' DISTINCT d.type')
			->getQuery()
			->getScalarResult();

		$res= array();
		foreach ($types as $type) {
			
			$a = array();
			$a['type'] = $type['type'];
			$a['list'] = $this->findByType($type['type']);
			$res[] = $a;
		}

		return $res;
	}

	public function findAvailablesByDepartment(Department $department)
	{
		$types = $this->createQueryBuilder('d')
			->select(' DISTINCT d.type')
			->where('d.department = :department')->setParameter(':department',$department)
			->getQuery()
			->getResult();
			
		$a = array();
		foreach ($types as $type) {
			
			$a[$type['type']] =  $this->findBy(
				array(
					'type'=>$type['type'],
					'working'=>true,
					'missing'=>false,
					'on_the_ground'=>false,
				));
		}

		return $a;
	}

	public function findOneByBarcode($barcode) {

		$qb = $this->createQueryBuilder('d');

		dump($barcode);
		$qb->select('d')
			->where($qb->expr()->orX(
				$qb->expr()->eq('d.barcode',':barcode'),
				$qb->expr()->eq('d.barcode_string',':barcode_string')
				))
			->setParameters(array(
				':barcode' => $barcode,
				':barcode_string' => $barcode
				))
			;

		return $qb->getQuery()->getOneOrNullResult();
	}
}
